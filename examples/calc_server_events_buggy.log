% Calculator server event log for a buggy run. The trace events issued by
% the Erlang VM are shown below; their encoded counterpart in our small trace
% event description notation follows.

%{trace,<0.136.0>,spawn,<0.138.0>,{calc_server,loop,[1]}}.
%{trace,<0.138.0>,spawned,<0.136.0>,{calc_server,loop,[1]}}.
%{trace,<0.138.0>,register,calc_server}.
%{trace,<0.136.0>,exit,normal}.
%{trace,<0.138.0>,'receive',{<0.140.0>,#Ref<0.2591416663.1992818689.192263>,{mul,10,97}}}.
%{trace,<0.138.0>,send,{#Ref<0.2591416663.1992818689.192263>,{mul,971}},<0.140.0>}.
%{trace,<0.138.0>,'receive',{<0.140.0>,#Ref<0.2591416663.1992818689.192268>,{add,10,97}}}.
%{trace,<0.138.0>,send,{#Ref<0.2591416663.1992818689.192268>,{add,108}},<0.140.0>}.
%{trace,<0.138.0>,'receive',{<0.140.0>,#Ref<0.2591416663.1992818689.192273>,stop}}.
%{trace,<0.138.0>,send,{#Ref<0.2591416663.1992818689.192273>,{ok,stopped}},<0.140.0>}.
%{trace,<0.138.0>,exit,normal}.

% Intermediate trace event description.
fork(<0.128.0>,<0.131.0>,{calc_server,loop,[1]})
init(<0.131.0>,<0.128.0>,{calc_server,loop,[1]})
exit(<0.128.0>,normal)
recv(<0.131.0>,{<0.126.0>,#Ref<0.2591416663.1992818690.191784>,{mul,10,97}})
send(<0.131.0>,<0.126.0>,{#Ref<0.2591416663.1992818690.191784>,{mul,971}})
recv(<0.131.0>,{<0.126.0>,#Ref<0.2591416663.1992818690.191788>,{add,10,97}})
send(<0.131.0>,<0.126.0>,{#Ref<0.2591416663.1992818690.191788>,{add,108}})
recv(<0.131.0>,{<0.126.0>,#Ref<0.2591416663.1992818690.191793>,stop})
send(<0.131.0>,<0.126.0>,{#Ref<0.2591416663.1992818690.191793>,{ok,stopped}})
exit(<0.131.0>,normal)








